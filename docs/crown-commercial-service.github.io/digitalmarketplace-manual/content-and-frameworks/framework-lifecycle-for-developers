

<!DOCTYPE html>
<html class="writer-html5" lang="en" >
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Framework lifecycle for developers &mdash; digitalmarketplace-manual 1.0.0 documentation</title>
  

  
  <link rel="stylesheet" href="../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />

  
  
    <link rel="shortcut icon" href="../_static/favicon.ico"/>
  
  
  

  
  <!--[if lt IE 9]>
    <script src="../_static/js/html5shiv.min.js"></script>
  <![endif]-->
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
        <script src="../_static/jquery.js"></script>
        <script src="../_static/underscore.js"></script>
        <script src="../_static/doctools.js"></script>
        <script src="../_static/language_data.js"></script>
    
    <script type="text/javascript" src="../_static/js/theme.js"></script>

    
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="How suppliers apply to a framework" href="how-suppliers-apply-to-a-framework.html" />
    <link rel="prev" title="Preparing to add a new framework" href="adding-frameworks.html" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../index.html" class="icon icon-home" alt="Documentation Home"> digitalmarketplace-manual
          

          
          </a>

          
            
            
              <div class="version">
                1.0.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="../search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        
        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Digital Marketplace background</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../digital-marketplace-background/deportalising.html">History: From G-Cloud 5 to G-Cloud 8</a></li>
<li class="toctree-l1"><a class="reference internal" href="../digital-marketplace-background/finding-things.html">Finding Things</a></li>
<li class="toctree-l1"><a class="reference internal" href="../digital-marketplace-background/journeys.html">User Journeys on the Digital Marketplace</a></li>
<li class="toctree-l1"><a class="reference internal" href="../digital-marketplace-background/gdpr.html">GDPR</a></li>
</ul>
<p class="caption"><span class="caption-text">Developing the Digital Marketplace</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/accessing-the-api.html">Accessing the API</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/adding-repos.html">Adding a new repository</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/application-architecture.html">Application architecture</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/browser-support.html">Browser and accessibility support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/environments.html">Environments</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/developer-setup.html">Developer setup</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/decision-records.html">Recording decisions on the Digital Marketplace</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/digitalmarketplace-runner.html">Digital Marketplace Runner (‘dmrunner’)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/nix.html">Nix Environments</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/data-model.html">Data model</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/development-and-deployment-process.html">Development and deployment process</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/frontend-migration.html">Migrating the Digital Marketplace frontend</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/moving-data.html">Moving data between environments</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/urls.html">URLs</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/users.html">Users</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/google-analytics.html">Google Analytics</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/load-testing.html">Load testing</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/automated-testing.html">Automated testing</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/splitting-applications.html">Splitting or adding a frontend application</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/database-migrations.html">Database migrations</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/docker-strategies.html">Docker strategies</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/frontend-assets-and-tools.html">Frontend assets and tools</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/python-typing-strategy.html">Python typing strategy</a></li>
<li class="toctree-l1"><a class="reference internal" href="../developing-the-digital-marketplace/production-guidelines.html">Guidelines for accessing production data and systems</a></li>
</ul>
<p class="caption"><span class="caption-text">Content and frameworks</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="adding-frameworks.html">Preparing to add a new framework</a></li>
<li class="toctree-l1 current"><a class="current reference internal" href="#">Framework lifecycle for developers</a><ul>
<li class="toctree-l2"><a class="reference internal" href="#overview">0 - overview</a></li>
<li class="toctree-l2"><a class="reference internal" href="#coming">1 - coming</a></li>
<li class="toctree-l2"><a class="reference internal" href="#a-open-with-clarification-questions-open">2(a) - open (with clarification questions open)</a></li>
<li class="toctree-l2"><a class="reference internal" href="#b-open-with-clarification-questions-closed">2(b) - open (with clarification questions closed)</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#reminding-suppliers-to-complete-their-application">Reminding suppliers to complete their application</a></li>
<li class="toctree-l3"><a class="reference internal" href="#scaling-up-the-apps">Scaling up the apps</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="#pending">3 - pending</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#exporting-data-for-ccs">Exporting data for CCS</a></li>
<li class="toctree-l3"><a class="reference internal" href="#re-assessing-failed-suppliers">Re-assessing failed suppliers</a></li>
<li class="toctree-l3"><a class="reference internal" href="#generating-framework-agreements">Generating framework agreements</a></li>
<li class="toctree-l3"><a class="reference internal" href="#uploading-fail-letters">Uploading ‘fail letters’</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="#standstill">4 - standstill</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#preparing-services-to-go-live">Preparing services to go live</a></li>
<li class="toctree-l3"><a class="reference internal" href="#g-cloud">G-Cloud</a></li>
<li class="toctree-l3"><a class="reference internal" href="#digital-outcomes-and-specialists">Digital Outcomes and Specialists</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="#live">5 - live</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#making-dos-services-live">Digital Outcomes and Specialists</a></li>
<li class="toctree-l3"><a class="reference internal" href="#id6">G-Cloud</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="#expired">6 - expired</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="how-suppliers-apply-to-a-framework.html">How suppliers apply to a framework</a></li>
<li class="toctree-l1"><a class="reference internal" href="framework-agreements.html">Framework agreements</a></li>
<li class="toctree-l1"><a class="reference internal" href="contract-variations.html">Contract variations</a></li>
<li class="toctree-l1"><a class="reference internal" href="adding-a-new-form-field-type.html">Adding a new form field type</a></li>
<li class="toctree-l1"><a class="reference internal" href="finding-content.html">Finding content</a></li>
<li class="toctree-l1"><a class="reference internal" href="changing-content.html">Changing content</a></li>
<li class="toctree-l1"><a class="reference internal" href="useful-api-endpoints-for-frameworks.html">Useful API endpoints for frameworks</a></li>
</ul>
<p class="caption"><span class="caption-text">Infrastructure</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/antivirus.html">The Antivirus API</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/aws-accounts.html">AWS accounts and access</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/aws-resources.html">AWS Resources</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/code-backups.html">Code backups</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/database-backups.html">Database backups</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/domains.html">Domains</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/emails.html">Email integration</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/elasticsearch.html">Elasticsearch</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/jenkins.html">Jenkins</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/github-actions.html">GitHub Actions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/logging.html">Logging, monitoring and alerting</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/maintenance-mode.html">Maintenance Mode</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/python-environments.html">Python environments</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/paas.html">What is PaaS?</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/paas.html#deploying-digital-marketplace-apps-to-gov-uk-paas">Deploying Digital Marketplace apps to GOV.UK PaaS</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/rate-limiting.html">Rate Limiting</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/upgrading-backend-services.html">Upgrading backend services</a></li>
<li class="toctree-l1"><a class="reference internal" href="../infrastructure/session-management.html">Session Management</a></li>
</ul>
<p class="caption"><span class="caption-text">Managing People and Secret Things</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../managing-people-and-secret-things/credentials.html">Credentials and secrets</a></li>
<li class="toctree-l1"><a class="reference internal" href="../managing-people-and-secret-things/accounts.html">Adding and removing access for new starters / leavers</a></li>
<li class="toctree-l1"><a class="reference internal" href="../managing-people-and-secret-things/production-access.html">Requirements for access to production environments</a></li>
</ul>
<p class="caption"><span class="caption-text">2nd Line Runbook</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/incidents.html">Incidents</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/logging-in-to-paas-databases.html">Logging in to databases</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/logging-in-to-paas-databases.html#resetting-brief-data-with-conduit">Resetting brief data with conduit</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/blocking-ips.html">IP Restrictions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/upgrading-jenkins.html">Upgrading Jenkins</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/rebuilding-jenkins.html">Rebuilding Jenkins from scratch</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/rotate-keys.html">Rotating API keys</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/debugging-paas-app-instances.html">Debugging PaaS App Instances</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/vulnerability-scanning.html">Vulnerability scanning</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/novations.html">Novations</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/support-tasks.html">Support Tasks</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/investigating-alerts.html">Responding to Cloudwatch alerts</a></li>
<li class="toctree-l1"><a class="reference internal" href="../2nd-line-runbook/buyer-domain-allow-list.html">Buyer Domain Allow List</a></li>
</ul>
<p class="caption"><span class="caption-text">What is this?</span></p>
<ul>
<li class="toctree-l1"><a class="reference external" href="https://github.com/alphagov/digitalmarketplace-manual/blob/master/README.md">README</a></li>
</ul>

            
          
        </div>
        
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../index.html">digitalmarketplace-manual</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../index.html" class="icon icon-home"></a> &raquo;</li>
        
      <li>Framework lifecycle for developers</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
            
              <a href="https://github.com/Crown-Commercial-Service/digitalmarketplace-manual/blob/main/manual/content-and-frameworks/framework-lifecycle-for-developers.rst" class="fa fa-github"> Edit on GitHub</a>
            
          
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="framework-lifecycle-for-developers">
<span id="id1"></span><h1><a class="toc-backref" href="#id7">Framework lifecycle for developers</a><a class="headerlink" href="#framework-lifecycle-for-developers" title="Permalink to this headline">¶</a></h1>
<div class="contents topic" id="contents">
<p class="topic-title first">Contents</p>
<ul class="simple">
<li><p><a class="reference internal" href="#framework-lifecycle-for-developers" id="id7">Framework lifecycle for developers</a></p>
<ul>
<li><p><a class="reference internal" href="#overview" id="id8">0 - overview</a></p></li>
<li><p><a class="reference internal" href="#coming" id="id9">1 - coming</a></p></li>
<li><p><a class="reference internal" href="#a-open-with-clarification-questions-open" id="id10">2(a) - open (with clarification questions open)</a></p></li>
<li><p><a class="reference internal" href="#b-open-with-clarification-questions-closed" id="id11">2(b) - open (with clarification questions closed)</a></p>
<ul>
<li><p><a class="reference internal" href="#reminding-suppliers-to-complete-their-application" id="id12">Reminding suppliers to complete their application</a></p></li>
<li><p><a class="reference internal" href="#scaling-up-the-apps" id="id13">Scaling up the apps</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#pending" id="id14">3 - pending</a></p>
<ul>
<li><p><a class="reference internal" href="#exporting-data-for-ccs" id="id15">Exporting data for CCS</a></p></li>
<li><p><a class="reference internal" href="#re-assessing-failed-suppliers" id="id16">Re-assessing failed suppliers</a></p></li>
<li><p><a class="reference internal" href="#generating-framework-agreements" id="id17">Generating framework agreements</a></p></li>
<li><p><a class="reference internal" href="#uploading-fail-letters" id="id18">Uploading ‘fail letters’</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#standstill" id="id19">4 - standstill</a></p>
<ul>
<li><p><a class="reference internal" href="#preparing-services-to-go-live" id="id20">Preparing services to go live</a></p></li>
<li><p><a class="reference internal" href="#g-cloud" id="id21">G-Cloud</a></p></li>
<li><p><a class="reference internal" href="#digital-outcomes-and-specialists" id="id22">Digital Outcomes and Specialists</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#live" id="id23">5 - live</a></p>
<ul>
<li><p><a class="reference internal" href="#making-dos-services-live" id="id24">Digital Outcomes and Specialists</a></p></li>
<li><p><a class="reference internal" href="#id6" id="id25">G-Cloud</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#expired" id="id26">6 - expired</a></p></li>
</ul>
</li>
</ul>
</div>
<div class="section" id="overview">
<h2><a class="toc-backref" href="#id8">0 - overview</a><a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h2>
<p>Each framework goes through a sequence of statuses that define the framework lifecycle:</p>
<table class="docutils align-default">
<colgroup>
<col style="width: 12%" />
<col style="width: 88%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><strong>status</strong></p></td>
<td><p><strong>Description</strong></p></td>
</tr>
<tr class="row-even"><td><p>coming</p></td>
<td><p>displays a message to users that the framework will be open for applications soon</p></td>
</tr>
<tr class="row-odd"><td><p>open</p></td>
<td><p>suppliers can apply to the framework</p></td>
</tr>
<tr class="row-even"><td><p>pending</p></td>
<td><p>applications close, the reports are generated and sent to CCS</p></td>
</tr>
<tr class="row-odd"><td><p>standstill</p></td>
<td><p>results sent to suppliers; successful suppliers sign and return their agreement files</p></td>
</tr>
<tr class="row-even"><td><p>live</p></td>
<td><p>supplier services are available to buyers on the Digital Marketplace</p></td>
</tr>
<tr class="row-odd"><td><p>expired</p></td>
<td><p>services for the framework no longer available on the Digital Marketplace</p></td>
</tr>
</tbody>
</table>
<p>There are a number of steps involved in launching a new framework iteration, aside from creating the framework
object itself in the database. <strong>Follow all the instructions in the</strong>
<a class="reference internal" href="adding-frameworks.html#adding-frameworks"><span class="std std-ref">Preparing to add a new framework</span></a> <strong>documentation before beginning the process below.</strong></p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Make sure you coordinate these steps with the framework’s product manager and/or comms team before running on
production. There is no ‘delete’ API method for frameworks, so proceed with caution!</p>
</div>
</div>
<div class="section" id="coming">
<h2><a class="toc-backref" href="#id9">1 - coming</a><a class="headerlink" href="#coming" title="Permalink to this headline">¶</a></h2>
<p>The framework will be open for applications soon, and a message will be shown on the Digital Marketplace home page.</p>
<p>Once the setup steps in <a class="reference internal" href="adding-frameworks.html#adding-frameworks"><span class="std std-ref">adding frameworks</span></a> are complete, the new framework object can be
created with status “coming”:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
   <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
   <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
       <span class="s2">&quot;slug&quot;</span><span class="p">:</span> <span class="s2">&quot;g-things-23&quot;</span><span class="p">,</span>
       <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;G-Things 23&quot;</span><span class="p">,</span>
       <span class="s2">&quot;framework&quot;</span><span class="p">:</span> <span class="s2">&quot;g-things&quot;</span><span class="p">,</span>
       <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="s2">&quot;coming&quot;</span><span class="p">,</span>
       <span class="s2">&quot;clarificationQuestionsOpen&quot;</span><span class="p">:</span> <span class="n">false</span><span class="p">,</span>
       <span class="s2">&quot;lots&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;cloud-hosting&quot;</span><span class="p">,</span> <span class="s2">&quot;cloud-software&quot;</span><span class="p">,</span> <span class="s2">&quot;cloud-support&quot;</span><span class="p">],</span>
       <span class="s2">&quot;hasDirectAward&quot;</span><span class="p">:</span> <span class="n">true</span><span class="p">,</span>
       <span class="s2">&quot;hasFurtherCompetition&quot;</span><span class="p">:</span> <span class="n">false</span>
   <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks</span>
</pre></div>
</div>
<p>Another POST request is required to update the framework with further attributes:</p>
<ul class="simple">
<li><p>the known/expected framework lifecycle dates</p></li>
<li><p>the <code class="docutils literal notranslate"><span class="pre">allowDeclarationReuse</span></code> flag</p></li>
</ul>
<p>The <code class="docutils literal notranslate"><span class="pre">allowDeclarationReuse</span></code> and <code class="docutils literal notranslate"><span class="pre">applicationsCloseAtUTC</span></code> keys are used to determine if declarations can be reused
from one framework to the next. If <code class="docutils literal notranslate"><span class="pre">allowDeclarationReuse</span></code> is not true, or if <code class="docutils literal notranslate"><span class="pre">applicationsCloseAtUTC</span></code>
is undefined, this framework <strong>will not</strong> be offered to suppliers as a valid source of answers for their declaration.</p>
<p>The other datetimes are used for display purposes only and do not currently affect framework state in any way (i.e.
the status is not automatically changed from <code class="docutils literal notranslate"><span class="pre">live</span></code> to <code class="docutils literal notranslate"><span class="pre">expired</span></code> at the time specified in <code class="docutils literal notranslate"><span class="pre">frameworkExpiresAtUTC</span></code>).</p>
<p>Set the lifecycle dates and declaration reuse flag with:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
    <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span> <span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
    <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
       <span class="s2">&quot;allowDeclarationReuse&quot;</span><span class="p">:</span> <span class="n">true</span><span class="p">,</span>
       <span class="s2">&quot;applicationsCloseAtUTC&quot;</span><span class="p">:</span> <span class="s2">&quot;2000-01-01T12:00:00.000000Z&quot;</span><span class="p">,</span>
       <span class="s2">&quot;intentionToAwardAtUTC&quot;</span><span class="p">:</span> <span class="s2">&quot;2000-01-01T12:00:00.000000Z&quot;</span><span class="p">,</span>
       <span class="s2">&quot;clarificationsCloseAtUTC&quot;</span><span class="p">:</span> <span class="s2">&quot;2000-01-01T12:00:00.000000Z&quot;</span><span class="p">,</span>
       <span class="s2">&quot;clarificationsPublishAtUTC&quot;</span><span class="p">:</span> <span class="s2">&quot;2000-01-01T12:00:00.000000Z&quot;</span><span class="p">,</span>
       <span class="s2">&quot;frameworkLiveAtUTC&quot;</span><span class="p">:</span> <span class="s2">&quot;2000-01-01T12:00:00.000000Z&quot;</span><span class="p">,</span>
       <span class="s2">&quot;frameworkExpiresAtUTC&quot;</span><span class="p">:</span> <span class="s2">&quot;2000-01-01T12:00:00.000000Z&quot;</span>
    <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
<p>Be careful with the timezones; all times in the database and server are in UTC, which only coincides with GMT of the UK
from the last Sunday of October until the last Sunday of March. The rest of the year the UK follows the British Summer Time (BST),
which is one later (UTC+01:00).</p>
</div>
<div class="section" id="a-open-with-clarification-questions-open">
<span id="frameworks-open"></span><h2><a class="toc-backref" href="#id10">2(a) - open (with clarification questions open)</a><a class="headerlink" href="#a-open-with-clarification-questions-open" title="Permalink to this headline">¶</a></h2>
<p>While a framework is open, suppliers can make their declaration and submit services that they want to provide.
Suppliers can also submit their public clarification questions to Crown Commercial Service (CCS) if the framework’s
<code class="docutils literal notranslate"><span class="pre">clarificationQuestionsOpen</span></code> attribute is set. Answers to these clarification questions are published to all
suppliers by Digital Marketplace.</p>
<ul class="simple">
<li><p>Before opening the framework, ensure any previous frameworks that we want applicants to be able to reuse declarations
from have both their <code class="docutils literal notranslate"><span class="pre">allowDeclarationReuse</span></code> flag set <strong>and</strong> <code class="docutils literal notranslate"><span class="pre">applicationsCloseAtUTC</span></code> field set.</p></li>
<li><p>Make sure any dates in the content are confirmed.</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p><strong>IMPORTANT:</strong> co-ordinate the launch with product/comms team before setting a framework to ‘open’.</p>
</div>
<p>To open the framework:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
     <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
     <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
         <span class="s2">&quot;status&quot;</span><span class="p">:</span><span class="s2">&quot;open&quot;</span><span class="p">,</span>
         <span class="s2">&quot;clarificationQuestionsOpen&quot;</span><span class="p">:</span> <span class="n">true</span>
     <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
<p>or:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="o">./</span><span class="n">scripts</span><span class="o">/</span><span class="n">api</span><span class="o">-</span><span class="n">clients</span><span class="o">-</span><span class="n">shell</span><span class="o">.</span><span class="n">py</span> <span class="o">&lt;</span><span class="n">STAGE</span><span class="o">&gt;</span>
<span class="n">data</span><span class="o">.</span><span class="n">update_framework</span><span class="p">(</span>
    <span class="s1">&#39;&lt;FRAMEWORK_SLUG&gt;&#39;</span><span class="p">,</span>
    <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;open&#39;</span><span class="p">,</span> <span class="s1">&#39;clarificationQuestionsOpen&#39;</span><span class="p">:</span> <span class="kc">True</span><span class="p">},</span>
    <span class="s1">&#39;developers.email@digital.cabinet-office.gov.uk&#39;</span>
 <span class="p">)</span>
</pre></div>
</div>
<ul class="simple">
<li><p>The framework’s product manager regularly publishes any clarification question answers by uploading PDFs in the
admin. Suppliers should be emailed after each batch of answers has been published (maximum 1 email per day). This
can be done with the jenkins job <code class="docutils literal notranslate"><span class="pre">notify_suppliers_of_framework_clarification_questions_answers</span></code>.</p></li>
<li><p>Update the <code class="docutils literal notranslate"><span class="pre">stats_to_performance_platform</span></code> Jenkins job with the new framework slug. The framework’s product manager
should be able to set up the new dashboard with the Performance Platform team and obtain any new credentials.</p></li>
<li><p>Update the <code class="docutils literal notranslate"><span class="pre">export_supplier_data_to_s3</span></code> Jenkins job with the new framework slug. This allows the framework manager
to download the supplier contact list from the admin, to email them with clarification question answers and other
updates.</p></li>
<li><p>If you opened a framework on preview or staging, run the functional and visual regression tests against that
environment and fix any test failures caused by the change in framework state.</p></li>
</ul>
</div>
<div class="section" id="b-open-with-clarification-questions-closed">
<h2><a class="toc-backref" href="#id11">2(b) - open (with clarification questions closed)</a><a class="headerlink" href="#b-open-with-clarification-questions-closed" title="Permalink to this headline">¶</a></h2>
<p>After the <code class="docutils literal notranslate"><span class="pre">clarificationsCloseAtUTC</span></code> date has passed, suppliers can no longer submit clarification questions to CCS
(though they can still submit private questions directly to CCS about their application, which aren’t published).</p>
<p>Clarification questions must be closed manually, with:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
     <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
     <span class="s2">&quot;frameworks&quot;</span><span class="p">:{</span>
         <span class="s2">&quot;status&quot;</span><span class="p">:</span><span class="s2">&quot;open&quot;</span><span class="p">,</span>
         <span class="s2">&quot;clarificationQuestionsOpen&quot;</span><span class="p">:</span> <span class="n">false</span>
     <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
<div class="section" id="reminding-suppliers-to-complete-their-application">
<h3><a class="toc-backref" href="#id12">Reminding suppliers to complete their application</a><a class="headerlink" href="#reminding-suppliers-to-complete-their-application" title="Permalink to this headline">¶</a></h3>
<p>One week before applications close, a developer should run the Jenkins job <a class="reference external" href="https://ci.marketplace.team/job/notify-suppliers-with-incomplete-applications-production/">Notify suppliers with incomplete applications - production</a> to send email reminders (via Notify) to
suppliers with incomplete applications, listing the steps they have left to do.</p>
</div>
<div class="section" id="scaling-up-the-apps">
<h3><a class="toc-backref" href="#id13">Scaling up the apps</a><a class="headerlink" href="#scaling-up-the-apps" title="Permalink to this headline">¶</a></h3>
<p>Traffic will increase sharply in the week before applications close. Be ready to scale up the number of instances on the
Supplier frontend, the API, and potentially the router and Antivirus API apps.</p>
<p>See <a class="reference internal" href="../infrastructure/paas.html#scaling-apps"><span class="std std-ref">Scaling PaaS apps</span></a> for information on how to do this.</p>
</div>
</div>
<div class="section" id="pending">
<h2><a class="toc-backref" href="#id14">3 - pending</a><a class="headerlink" href="#pending" title="Permalink to this headline">¶</a></h2>
<p>Applications for the framework are complete, and suppliers can no longer edit their declaration or services.</p>
<p>Close applications with:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
     <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
     <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
         <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="s2">&quot;pending&quot;</span>
     <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
<p>Any apps that were scaled up prior to applications closing can now be scaled down to the normal number of instances.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">stats_to_performance_platform</span></code> Jenkins job to send data to the performance platform can now be disabled. You
may need to contact the Performance Platform administrator to get the correct final totals to show up on the dashboard.</p>
<p>If you have closed applications on preview or staging, run the functional and visual regression tests against that
environment and fix any test failures caused by the change in framework state.</p>
<div class="section" id="exporting-data-for-ccs">
<h3><a class="toc-backref" href="#id15">Exporting data for CCS</a><a class="headerlink" href="#exporting-data-for-ccs" title="Permalink to this headline">¶</a></h3>
<p>Application data for the framework now needs to be exported and sent to CCS for evaluation as soon as possible after
applications close. There are some test supplier accounts in production for use by the developers and CCS. These can
be found in the credentials repo, and should be excluded from any reports or framework awards.</p>
<p>A developer should carry out the following tasks <strong>in the right order</strong>:</p>
<ul class="simple">
<li><p>Ensure the framework’s <code class="docutils literal notranslate"><span class="pre">intentionToAwardAtUTC</span></code> date - and indeed the other dates - are set and correct</p></li>
<li><p>Run the <a class="reference external" href="https://ci.marketplace.team/job/notify-suppliers-whether-application-made-for-framework-production/">Notify suppliers whether application made for framework</a> job on Jenkins.
This will check the application status of all suppliers who showed interest in the framework and email them to
say either “we got your application” or “you didn’t apply to the framework”.</p></li>
<li><p>Run <code class="docutils literal notranslate"><span class="pre">export-framework-applications-at-close.py</span></code> from our <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-scripts">scripts repository</a> to generate the list of supplier
applications. This shows how far each supplier had got once they’d started their application, i.e. whether they
completed their declaration and the number of services submitted/left in draft in each lot.</p></li>
<li><p>Run the <cite>Mark definite framework results</cite> job on Jenkins to determine automatic passes, automatic
fails and discretionary award statuses and set the majority of <code class="docutils literal notranslate"><span class="pre">on_framework</span></code> values in the database. The assessment
schema previously generated in the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-frameworks">frameworks repository</a> is used here to validate the supplier declarations. Make
sure the schema has been committed to the scripts repository, so that Jenkins can access it.</p></li>
<li><p>Run <code class="docutils literal notranslate"><span class="pre">export-framework-results-reasons.py</span></code> from our <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-scripts">scripts repository</a> to export the results from the previous
step, ready to pass to CCS.  It generates three files, one each for successful, failed and discretionary results.</p></li>
<li><p>(G-Cloud only) Run the <a class="reference external" href="https://ci.marketplace.team/job/scan-g-cloud-services-for-bad-words-production/">Scan G-Cloud services for bad words</a> job on Jenkins, specifying the ‘draft’ services option.
Download the CSV report from the Jenkins box and send to the CCS Category team for review. It’s up to CCS to decide
on any actions (e.g. disqualifying the supplier from the framework completely), however they may provide us with a
list of suppliers or services to disable prior to the framework going live.</p></li>
<li><p>Finally run <code class="docutils literal notranslate"><span class="pre">export-framework-applicant-details.py</span></code> from our <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-scripts">scripts repository</a> to generate a separate list of
all applicants including contact details from their declaration.  This can be used by CCS to get in touch with
suppliers to clarify things about their application when necessary.</p></li>
</ul>
<p>We then <strong>wait for CCS</strong> to decide who passes and fails the discretionary applications, and which automatically-failed
suppliers get on to the framework after all.</p>
</div>
<div class="section" id="re-assessing-failed-suppliers">
<h3><a class="toc-backref" href="#id16">Re-assessing failed suppliers</a><a class="headerlink" href="#re-assessing-failed-suppliers" title="Permalink to this headline">¶</a></h3>
<p>CCS will supply us with a list of suppliers who should be on the framework after all, who need to be updated. This
process differs depending on if the framework’s services are assessed against a schema (like we do for DOS) or not
(like  G-Cloud).</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You may want to check that the number of supplier IDs in the final pass/fail lists match with the total produced
from the export script initially; while usually things are fine we have had issues before where some suppliers have
been missed out and then they are unable to see their application status.</p>
</div>
<ul class="simple">
<li><p>Run the <code class="docutils literal notranslate"><span class="pre">update-framework-results.py</span></code> script to set those suppliers provided by CCS as <code class="docutils literal notranslate"><span class="pre">on_framework</span></code>.
The suppliers declaration or services are not changed, as the <code class="docutils literal notranslate"><span class="pre">mark-definite-framework-results.py</span></code> will have
already set their draft services statuses to <code class="docutils literal notranslate"><span class="pre">submitted</span></code>.</p></li>
</ul>
<p>Previously, DOS services were also assessed via a pass/fail schema. They are now validated during the supplier
application period - a supplier can’t create a service that would ‘fail’. So the re-assessment process is now the same
for G-Cloud and DOS.</p>
</div>
<div class="section" id="generating-framework-agreements">
<span id="id2"></span><h3><a class="toc-backref" href="#id17">Generating framework agreements</a><a class="headerlink" href="#generating-framework-agreements" title="Permalink to this headline">¶</a></h3>
<ul>
<li><p>Make sure the relevant framework document templates are in the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-agreements/tree/master/documents">agreements repository</a> and that they have been signed off by CCS.</p></li>
<li><p>Set the framework agreement details in the database, if this hasn’t been done already:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
     <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
     <span class="s2">&quot;frameworks&quot;</span><span class="p">:{</span>
        <span class="s2">&quot;frameworkAgreementDetails&quot;</span><span class="p">:</span> <span class="p">{</span>
           <span class="s2">&quot;contractNoticeNumber&quot;</span><span class="p">:</span> <span class="s2">&quot;RM1557xxiii-v1.2-12-13-2525&quot;</span><span class="p">,</span>
           <span class="s2">&quot;countersignerName&quot;</span><span class="p">:</span> <span class="s2">&quot;Joe Bloggs&quot;</span><span class="p">,</span>
           <span class="s2">&quot;countersignerRole&quot;</span><span class="p">:</span> <span class="s2">&quot;Director - Technology&quot;</span><span class="p">,</span>
           <span class="s2">&quot;frameworkAgreementVersion&quot;</span><span class="p">:</span> <span class="s2">&quot;RM1557xxiii&quot;</span><span class="p">,</span>
           <span class="s2">&quot;frameworkExtensionLength&quot;</span><span class="p">:</span> <span class="s2">&quot;12 months&quot;</span><span class="p">,</span>
           <span class="s2">&quot;frameworkRefDate&quot;</span><span class="p">:</span> <span class="s2">&quot;32-13-2525&quot;</span><span class="p">,</span>
           <span class="s2">&quot;frameworkURL&quot;</span><span class="p">:</span> <span class="s2">&quot;https://www.gov.uk/government/publications/g-things-23-framework-agreement&quot;</span><span class="p">,</span>
           <span class="s2">&quot;lotDescriptions&quot;</span><span class="p">:</span> <span class="p">{</span>
             <span class="s2">&quot;cloud-hosting&quot;</span><span class="p">:</span> <span class="s2">&quot;Lot 1: Cloud hosting&quot;</span><span class="p">,</span>
             <span class="s2">&quot;cloud-software&quot;</span><span class="p">:</span> <span class="s2">&quot;Lot 2: Cloud software&quot;</span><span class="p">,</span>
             <span class="s2">&quot;cloud-support&quot;</span><span class="p">:</span> <span class="s2">&quot;Lot 3: Cloud support&quot;</span>
           <span class="p">},</span>
           <span class="s2">&quot;lotOrder&quot;</span><span class="p">:</span> <span class="p">[</span>
             <span class="s2">&quot;cloud-hosting&quot;</span><span class="p">,</span>
             <span class="s2">&quot;cloud-software&quot;</span><span class="p">,</span>
             <span class="s2">&quot;cloud-support&quot;</span>
           <span class="p">],</span>
           <span class="s2">&quot;variations&quot;</span><span class="p">:</span> <span class="p">{</span>
           <span class="p">}</span>
        <span class="p">}</span>
     <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
</li>
</ul>
<p>These framework agreement details are required to generate the contracts that suppliers will sign if they are accepted
onto the framework. Some of this information will not be available when the framework is added to the database - triple
check all the values with Crown Commercial Service (CCS), especially <code class="docutils literal notranslate"><span class="pre">frameworkRefDate</span></code> (usually the date of the
last day of standstill but can vary).</p>
<ul class="simple">
<li><p>Run <code class="docutils literal notranslate"><span class="pre">generate-framework-agreement-signature-pages.py</span></code> from our <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-scripts">scripts repository</a> for a single supplier ID locally to test the generated framework agreement, following the detailed instructions in the script’s docstring. The generated document should be signed off by CCS before it is sent to suppliers using the Jenkins job during standstill.</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>If a supplier has made a mistake on their agreement details, they can re-sign, see: <a class="reference internal" href="../2nd-line-runbook/support-tasks.html#re-sign"><span class="std std-ref">Supplier has made a mistake when signing framework agreement</span></a>.</p>
</div>
</div>
<div class="section" id="uploading-fail-letters">
<h3><a class="toc-backref" href="#id18">Uploading ‘fail letters’</a><a class="headerlink" href="#uploading-fail-letters" title="Permalink to this headline">¶</a></h3>
<ul>
<li><p>CCS must supply result letters for all suppliers who <strong>failed</strong> to make it onto the framework.
These must be PDFs uploaded to the agreements bucket with the following filename and path format:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">s3</span><span class="p">:</span><span class="o">//</span><span class="n">digitalmarketplace</span><span class="o">-</span><span class="n">agreements</span><span class="o">-&lt;</span><span class="n">stage</span><span class="o">&gt;-&lt;</span><span class="n">stage</span><span class="o">&gt;/&lt;</span><span class="n">framework_slug</span><span class="o">&gt;/</span><span class="n">agreements</span><span class="o">/&lt;</span><span class="n">supplier_id</span><span class="o">&gt;/&lt;</span><span class="n">supplier_id</span><span class="o">&gt;-</span><span class="n">result</span><span class="o">-</span><span class="n">letter</span><span class="o">.</span><span class="n">pdf</span>
</pre></div>
</div>
<p>These can also be uploaded using the <code class="docutils literal notranslate"><span class="pre">bulk-upload-documents.py</span></code> script and should be done before the beginning of <a class="reference internal" href="#standstill">standstill</a>.</p>
</li>
</ul>
<p>Any documents submitted by suppliers as part of the application are automatically scanned for viruses via the
<a class="reference external" href="https://github.com/alphagov/digitalmarketplace-antivirus-api">Antivirus API</a>.</p>
<p>Remember to use the <code class="docutils literal notranslate"><span class="pre">production-developers</span></code> <a class="reference internal" href="../infrastructure/aws-accounts.html#aws-accounts"><span class="std std-ref">AWS account</span></a> when running the upload scripts.</p>
</div>
</div>
<div class="section" id="standstill">
<span id="id3"></span><h2><a class="toc-backref" href="#id19">4 - standstill</a><a class="headerlink" href="#standstill" title="Permalink to this headline">¶</a></h2>
<p>Results are made available to suppliers at the beginning of standstill, along with signature pages to sign for suppliers
awarded onto the framework. This is also known ‘Intention to Award’ (the actual ‘awarding’ of the framework happens at
the end of standstill).</p>
<p>During standstill, buyers will see banner messages on the direct award project saved search page
(<code class="docutils literal notranslate"><span class="pre">/buyers/direct-award/g-cloud/projects/&lt;project_id&gt;</span></code>), explaining how saved search behaves during the
transition between frameworks. This content relies on both <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-frameworks">frameworks repository</a> metadata and framework dates in
the database.</p>
<ul>
<li><p>Ensure that <code class="docutils literal notranslate"><span class="pre">following_framework.yml</span></code> exists in the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-frameworks">frameworks repository</a> metadata folder for the old
framework, and that it contains <code class="docutils literal notranslate"><span class="pre">slug:</span> <span class="pre">&lt;following-framework-slug&gt;</span></code>. For G9 for example, it would contain
<code class="docutils literal notranslate"><span class="pre">slug:</span> <span class="pre">g-cloud-10</span></code>.</p></li>
<li><p>Ensure that the <code class="docutils literal notranslate"><span class="pre">frameworkLiveAtUTC</span></code> is set correctly in the database, for the incoming framework</p></li>
<li><p>Ensure the links to these documents in the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-frameworks">frameworks repository</a> at <code class="docutils literal notranslate"><span class="pre">frameworks/&lt;frameworks_slug&gt;/messages/urls.yml</span></code>
are correct and the new version is pulled into <code class="docutils literal notranslate"><span class="pre">supplier-frontend</span></code>. Suppliers will see these links when we email them in the next step.</p></li>
<li><p>Update the framework specific content in supplier-frontend for the <code class="docutils literal notranslate"><span class="pre">/frameworks/&lt;framework_slug&gt;/sign-framework-agreement</span></code> route. Ensure this is signed off by CCS.</p></li>
<li><p>The framework status can then be set to <code class="docutils literal notranslate"><span class="pre">standstill</span></code> using:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
     <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
     <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
         <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="s2">&quot;standstill&quot;</span>
     <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
</li>
<li><p>Finalised versions of the framework agreement documents must now be published on GOV.UK by the framework product
manager / content designer.</p></li>
<li><p>Run the <a class="reference external" href="https://ci.marketplace.team/job/notify-suppliers-of-intention-to-award-(41)/">Notify suppliers of Intention To Award (41)</a> Jenkins Job to email all successful suppliers
with their result. The email also contains a link to log in and sign their framework agreement. Once logged in, they
can also view links to the published documents on GOV.UK.</p></li>
<li><p>Update the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-jenkins/blob/main/job_definitions/generate_upload_and_notify_counterpart_signature_pages.yml">job_definitions/generate_upload_and_notify_counterpart_signature_pages.yml</a> job on Jenkins so that framework agreements
start being countersigned for the framework</p></li>
<li><p>If you’ve put a framework into standstill on preview or staging, run the functional and visual regression tests
against that environment and fix any test failures caused by the change in framework state.</p></li>
<li><p>Towards the end of standstill we send a reminder email to suppliers who have not yet signed their framework agreement by running the
<a class="reference external" href="https://ci.marketplace.team/job/remind-suppliers-to-sign-framework-agreement-(43)/">Remind suppliers to sign framework agreement (43)</a> Jenkins Job.</p></li>
</ul>
<p>Unsuccessful suppliers will be contacted directly by CCS with their result, so as long as we have already uploaded the
PDF result letters (see ‘fail letters’ in the previous step) there is nothing more to do for them.</p>
<div class="section" id="preparing-services-to-go-live">
<h3><a class="toc-backref" href="#id20">Preparing services to go live</a><a class="headerlink" href="#preparing-services-to-go-live" title="Permalink to this headline">¶</a></h3>
<p>Framework services can now be migrated from drafts to “real” services. This step is slightly different for G-Cloud
and Digital Outcomes and Specialists.</p>
</div>
<div class="section" id="g-cloud">
<h3><a class="toc-backref" href="#id21">G-Cloud</a><a class="headerlink" href="#g-cloud" title="Permalink to this headline">¶</a></h3>
<div class="admonition warning">
<p class="admonition-title">Warning</p>
<p>This step took approximately 10 hours for G-Cloud 11’s 31000 services. While some improvements have been made for
G-Cloud 12, it’s recommended to start this task at least the morning before the end of standstill.</p>
</div>
<ul>
<li><p>For preview only, you need to either:</p>
<blockquote>
<div><ul class="simple">
<li><p>work out how to copy all the submission files in the S3 bucket from production to preview (and document it here); or</p></li>
<li><p>abandon this process and do it in production instead. Then copy the production database with published services back to preview.</p></li>
</ul>
</div></blockquote>
</li>
<li><p>Disconnect the destination <code class="docutils literal notranslate"><span class="pre">documents</span></code> bucket from the antivirus SNS topic so that the
<a class="reference internal" href="../infrastructure/antivirus.html#antivirus"><span class="std std-ref">Antivirus API</span></a> won’t get overwhelmed by the volume of documents being uploaded during the following
process. This can be done by altering the terraform and applying this temporary configuration. Being disconnected from
real-time scanning triggers shouldn’t prevent catch-up jobs from attempting to scan these new files at a more
controlled pace overnight, so there shouldn’t be any concern about ending up with unscanned files in the bucket.</p></li>
<li><p>Run the <code class="docutils literal notranslate"><span class="pre">Publish</span> <span class="pre">draft</span> <span class="pre">services</span></code> Jenkins job. Make sure to specify the appropriate <a class="reference internal" href="../infrastructure/aws-accounts.html#aws-accounts"><span class="std std-ref">AWS account</span></a>
account for the stage (<cite>production</cite> for Production and Staging, <cite>development</cite> for Preview). Otherwise there will be
permissions woes when a user/admin later tries to update their documents and the webapp finds itself unable to
overwrite the file (more information on this is available in the docstring of the script).
This job will:</p>
<blockquote>
<div><ul class="simple">
<li><p>copy submitted draft services from “on framework” suppliers into the services table with a new service ID</p></li>
<li><p>update the draft services table with the new service IDs and leave the drafts there</p></li>
<li><p>copy the documents from the <code class="docutils literal notranslate"><span class="pre">submissions</span></code> bucket into the live <code class="docutils literal notranslate"><span class="pre">documents</span></code> bucket with an appropriate
filename and make them readable by everyone</p></li>
<li><p>update the service data with the new public document URLs</p></li>
<li><p>drafts for unsuccessful suppliers are left unaltered in the database</p></li>
</ul>
</div></blockquote>
</li>
<li><p>Publishing services takes several hours! Be patient and check the Jenkins console log for any failures. The script
can be re-run manually, optionally supplying a file containing draft service IDs that failed the first time around.
Check the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-scripts/blob/master/scripts/framework-applications/publish-draft-services.py">publish-draft-services.py script</a> docstring for details.</p></li>
<li><p>Run <code class="docutils literal notranslate"><span class="pre">oneoff/acknowledge_publish_draft_service_updates.py</span></code> to acknowledge the (several thousand!) audit events that
have just been created during the service publishing. This will stop these appearing as changes for the CCS Category
team to approve in the Admin.</p></li>
<li><p>Run a script to suspend all services of suppliers who have not signed the framework agreement and notify them, see: <a class="reference internal" href="framework-agreements.html#suspending-suppliers"><span class="std std-ref">Suspending suppliers without an agreement</span></a>.</p></li>
</ul>
<p>At this point, <strong>check</strong>:</p>
<ul class="simple">
<li><p>that the new services are not yet visible on the marketplace</p></li>
<li><p>that the public document URLs work</p></li>
<li><p>that the documents show the intended owner account when viewed in the AWS console</p></li>
<li><p>that the count of services on the new framework matches the count of submitted drafts from “on framework” suppliers</p></li>
</ul>
<p>Once G-Cloud services are migrated:</p>
<ul class="simple">
<li><p>Check that the search mapping for the new framework has been committed to the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-search-api">Search API</a> mappings folder (it should
be named something like <code class="docutils literal notranslate"><span class="pre">services-g-things-23.json</span></code>) and that the commit has been released to production. See the
<a class="reference external" href="https://github.com/alphagov/digitalmarketplace-search-api">Search API</a> README for more details.</p></li>
<li><p>Run the <code class="docutils literal notranslate"><span class="pre">Create</span> <span class="pre">index</span> <span class="pre">-</span> <span class="pre">&lt;stage&gt;</span></code> Jenkins job with the new mapping, to create and populate the new index.
<strong>Do not name the index as any known framework family or framework slug!</strong> It should be timestamped with the
current date, eg <code class="docutils literal notranslate"><span class="pre">g-things-23-2019-06-31</span></code>.</p></li>
<li><p>Re-enable the antivirus SNS topic for the documents bucket.</p></li>
</ul>
</div>
<div class="section" id="digital-outcomes-and-specialists">
<h3><a class="toc-backref" href="#id22">Digital Outcomes and Specialists</a><a class="headerlink" href="#digital-outcomes-and-specialists" title="Permalink to this headline">¶</a></h3>
<p>DOS services are not visible on the Digital Marketplace, and do not need to be indexed or scanned. There’s just one
step to do:</p>
<ul class="simple">
<li><p>Run the <code class="docutils literal notranslate"><span class="pre">publish-draft-services.py</span></code> script, found under the <code class="docutils literal notranslate"><span class="pre">framework-applications/</span></code> directory of the scripts
repo.</p></li>
</ul>
<p>For DOS there are no documents to be transferred between buckets, so the publishing script will be much quicker than
G-Cloud (around 25 minutes for DOS4), and will not need any bucket names to be supplied as arguments. This also means
there are no extra audit events, so we don’t need to run the <code class="docutils literal notranslate"><span class="pre">acknowledge_publish_draft_service_updates.py</span></code> script.</p>
</div>
</div>
<div class="section" id="live">
<h2><a class="toc-backref" href="#id23">5 - live</a><a class="headerlink" href="#live" title="Permalink to this headline">¶</a></h2>
<p>This step differs for G-Cloud and Digital Outcomes and Specialists.</p>
<div class="section" id="making-dos-services-live">
<span id="id5"></span><h3><a class="toc-backref" href="#id24">Digital Outcomes and Specialists</a><a class="headerlink" href="#making-dos-services-live" title="Permalink to this headline">¶</a></h3>
<p>To make a new Digital Outcomes and Specialists framework live:</p>
<ul>
<li><p>Run the <code class="docutils literal notranslate"><span class="pre">export-dos-*.py</span></code> scripts from the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-scripts">scripts repository</a> to generate new CSVs of services for each lot.</p></li>
<li><p>Check the CSVs with a product manager/framework owner, who can decide what data should be included/changed.
In the past we have manually cleaned (not all columns of data are needed), renamed columns and checked the correctness
of the data. The final CSV should match the formatting of the current version.</p></li>
<li><p>Upload the CSVs for each lot to the S3 bucket, following the naming conventions for previous framework iterations:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">digitalmarketplace</span><span class="o">-</span><span class="n">communications</span><span class="o">-</span><span class="n">production</span><span class="o">-</span><span class="n">production</span><span class="o">/&lt;</span><span class="n">framework_slug</span><span class="o">&gt;/</span><span class="n">communications</span><span class="o">/</span><span class="n">catalogues</span>
</pre></div>
</div>
</li>
<li><p>Using the S3 GUI, make the files available to be read by the public, and update the metadata for the new files to
set the <code class="docutils literal notranslate"><span class="pre">Content-disposition</span></code> to <code class="docutils literal notranslate"><span class="pre">attachment</span></code>.</p></li>
<li><p>Update the API’s <code class="docutils literal notranslate"><span class="pre">DM_FRAMEWORK_TO_ES_INDEX</span></code> config setting and release the app to production, so that any buyer
edits (such as clarification questions and answers) to briefs are immediately re-indexed. (Note that this config is
in the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-api">Data API</a>, not the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-search-api">Search API</a>!)</p></li>
<li><p>Check for any hardcoded instances of the framework slug in the frontend templates (e.g. Supplier FE dashboard, Admin
FE home page) and make sure these are updated (or better yet, un-harcode them!)</p></li>
<li><p><strong>Use the DOS-specific API endpoint to set the framework live</strong>. The endpoint will update the incoming frameworks
status to <code class="docutils literal notranslate"><span class="pre">live</span></code> and set the outgoing frameworks status to <code class="docutils literal notranslate"><span class="pre">expired</span></code>. It will also migrate any existing drafts
for the outgoing framework to be associated with the incoming framework. The transition between DOS frameworks for a
buyer should be relatively transparent and we want them to not lose their existing drafts. Either use the API client,
or use:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
    <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span> <span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
    <span class="s2">&quot;expiringFramework&quot;</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">EXPIRING_FRAMEWORK_SLUG</span><span class="o">&gt;</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/transition-dos/&lt;INCOMING_FRAMEWORK&gt;</span>
</pre></div>
</div>
</li>
<li><p>Suspend suppliers who have not yet signed their framework agreement using the <a class="reference internal" href="framework-agreements.html#suspending-suppliers"><span class="std std-ref">bulk suspend script</span></a>. Make sure to save the output of the script for audit purposes, and you may also need to know
who wasn’t suspended for the next step.</p></li>
<li><p>Let suppliers who have signed their framework agreements know that their services are live by running the
<code class="docutils literal notranslate"><span class="pre">notify-suppliers-with-signed-framework-agreement.py</span></code> script. You will probably find at this point that suppliers
who were suspended are now frantically signing their agreements; you may want to use the output of the previous step
to avoid emailing these suppliers as they won’t be unsuspended until the next time the countersigning script runs.</p></li>
<li><p>Create new empty mailing lists for each lot in Mailchimp (see <a class="reference internal" href="../infrastructure/emails.html#creating-new-mailchimp-lists"><span class="std std-ref">Creating new lists in Mailchimp</span></a>)
and update the <code class="docutils literal notranslate"><span class="pre">send-dos-opportunities-email.py</span></code> and <code class="docutils literal notranslate"><span class="pre">upload-dos-opportunities-email-list.py</span></code> scripts with the
new list IDs:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">send-dos-opportunities-email.py</span></code> is called by the daily job <code class="docutils literal notranslate"><span class="pre">notify_suppliers_of_dos_opportunities.yml</span></code>, which creates and sends mailchimp campaign to suppliers subscribed to the lot list for the latest opportunities</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">upload-dos-opportunities-email-list.py</span></code> is called by the daily job <code class="docutils literal notranslate"><span class="pre">upload_dos_opportunities_email_list.yml</span></code>, which subscribes new supplier emails to the corresponding mailchimp lists</p></li>
</ul>
</li>
<li><p>Update the following scripts, test suites and Jenkins jobs/variables to include the new DOS framework. This list is probably not
exhaustive so you should double check:</p>
<ul class="simple">
<li><dl class="simple">
<dt>Scripts:</dt><dd><ul>
<li><p><code class="docutils literal notranslate"><span class="pre">index_to_search_service.py</span></code></p></li>
</ul>
</dd>
</dl>
</li>
<li><dl class="simple">
<dt>Jenkins jobs and variables:</dt><dd><ul>
<li><p><code class="docutils literal notranslate"><span class="pre">export_supplier_data_to_s3.yml</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">upload_dos_opportunities_email_list.yml</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">digitalmarketplace-jenkins/playbooks/roles/jenkins/defaults/main.yml</span></code></p></li>
</ul>
</dd>
</dl>
</li>
<li><dl class="simple">
<dt>Tests:</dt><dd><ul>
<li><p>Functional tests</p></li>
<li><p>Visual regression tests</p></li>
</ul>
</dd>
</dl>
</li>
</ul>
</li>
</ul>
</div>
<div class="section" id="id6">
<h3><a class="toc-backref" href="#id25">G-Cloud</a><a class="headerlink" href="#id6" title="Permalink to this headline">¶</a></h3>
<p>To make a new G-Cloud framework live:</p>
<ul>
<li><p>Create an alias for the new index matching the latest live framework slug (e.g. <code class="docutils literal notranslate"><span class="pre">g-things-22</span></code>) on the
datestamped index that includes the new services. Use the <code class="docutils literal notranslate"><span class="pre">Update</span> <span class="pre">index</span> <span class="pre">alias</span> <span class="pre">-</span> <span class="pre">&lt;STAGE&gt;</span></code> job on Jenkins. Check that
the number of docs on the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-search-api">Search API</a> <code class="docutils literal notranslate"><span class="pre">/_status</span></code> endpoint matches the number of expected live services and that
the alias is present on the index.</p></li>
<li><dl class="simple">
<dt>Update the following jobs on Jenkins:</dt><dd><ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">export_supplier_data_to_s3.yml</span></code></p></li>
</ul>
</dd>
</dl>
</li>
<li><p>Update the Jenkins <code class="docutils literal notranslate"><span class="pre">search_config</span></code> to reference the correct framework(s) and apply the changes with:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">make</span> <span class="n">reconfigure</span>
</pre></div>
</div>
<p>This config will feed into the nightly <code class="docutils literal notranslate"><span class="pre">Update</span> <span class="pre">index</span> <span class="pre">-</span> <span class="pre">&lt;STAGE&gt;</span></code> jobs, and the
<code class="docutils literal notranslate"><span class="pre">Clean</span> <span class="pre">and</span> <span class="pre">apply</span> <span class="pre">database</span> <span class="pre">dump</span> <span class="pre">-</span> <span class="pre">&lt;STAGE&gt;</span></code> job. Note that Jenkins may need to restart following this update.</p>
</li>
<li><p>Add the new <code class="docutils literal notranslate"><span class="pre">g-things-23</span></code> index to the API’s <code class="docutils literal notranslate"><span class="pre">DM_FRAMEWORK_TO_ES_INDEX</span></code> config setting and release the app to
production, so that any supplier edits to live services are immediately re-indexed. (Note that this config is in the
<a class="reference external" href="https://github.com/alphagov/digitalmarketplace-api">Data API</a>, not the <a class="reference external" href="https://github.com/alphagov/digitalmarketplace-search-api">Search API</a>!)</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Triple check everything’s ready with product and comms. Let’s go live!</p>
</div>
<ul>
<li><p>Set the framework status to <code class="docutils literal notranslate"><span class="pre">live</span></code> using:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
    <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
    <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
        <span class="s2">&quot;status&quot;</span><span class="p">:</span><span class="s2">&quot;live&quot;</span>
    <span class="p">}</span>
 <span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/&lt;FRAMEWORK_SLUG&gt;</span>
</pre></div>
</div>
</li>
<li><p>Check that the new service pages are displayed on the Digital Marketplace and can be found using search.</p></li>
<li><p>Pat yourself on the back - you’re live!</p></li>
<li><p>If you made a framework live on preview or staging, run the functional and visual regression tests against that
environment and fix any test failures caused by the change in framework state.</p></li>
</ul>
</div>
</div>
<div class="section" id="expired">
<h2><a class="toc-backref" href="#id26">6 - expired</a><a class="headerlink" href="#expired" title="Permalink to this headline">¶</a></h2>
<p>G-Cloud services on the framework are still visible on the Digital Marketplace but show a banner explaining
that the framework has expired and the service can no longer be procured. Services should no longer be returned by
search - the service pages are only visible by direct navigation to them.</p>
<p>Set the G-Cloud framework status to <code class="docutils literal notranslate"><span class="pre">expired</span></code> using:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">curl</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Authorization: Bearer &lt;API_TOKEN&gt;&quot;</span> <span class="o">-</span><span class="n">H</span> <span class="s2">&quot;Content-Type: application/json&quot;</span> <span class="o">-</span><span class="n">X</span> <span class="n">POST</span> <span class="o">-</span><span class="n">d</span>
<span class="s1">&#39;{</span>
     <span class="s2">&quot;updated_by&quot;</span><span class="p">:</span><span class="s2">&quot;developers.email@digital.cabinet-office.gov.uk&quot;</span><span class="p">,</span>
     <span class="s2">&quot;frameworks&quot;</span><span class="p">:</span> <span class="p">{</span>
         <span class="s2">&quot;status&quot;</span><span class="p">:</span> <span class="s2">&quot;expired&quot;</span>
     <span class="p">}</span>
<span class="p">}</span><span class="s1">&#39; https://&lt;API_ENDPOINT&gt;/frameworks/g-things-22</span>
</pre></div>
</div>
<p>DOS frameworks are automatically expired when the new iteration is made live (see above) and do not need to be manually
set to <code class="docutils literal notranslate"><span class="pre">expired</span></code>.</p>
</div>
</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="how-suppliers-apply-to-a-framework.html" class="btn btn-neutral float-right" title="How suppliers apply to a framework" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="adding-frameworks.html" class="btn btn-neutral float-left" title="Preparing to add a new framework" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        
        &copy; Copyright 2013 - 2021 Digital Marketplace

    </p>
  </div>
    
    
    
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a
    
    <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a>
    
    provided by <a href="https://readthedocs.org">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>
</html>